exit
@file.close
@file.puts('sdvsdvsfvsfv')
@file.put('sdvsdvsfvsfv')
@file.write('sdvsdvsfvsfv')
@file.methods
exit
4229/613
=4229/613
Bus.count
BusesService.group(:bus_id, :service_id).count.select{|k,v| v == 1}.count
BusesService.group(:bus_id, :service_id).count.select{|k,v| v == 1}
BusesService.group(:bus_id, :service_id).count.select{|k,v| v != 1}
BusesService.group(:bus_id, :service_id).count
BusesService.count
exit
@buses.values.map(&:values).flatten
@buses.values.map(&:values)
@buses.values
exit
@buses["#{trip['bus']['model']}"] = @buses["#{trip['bus']['model']}"].merge("#{trip['bus']['number']}": bus)
@buses["#{trip['bus']['model']}"] = @buses["#{trip['bus']['model']}"].merge({"#{trip['bus']['number']}": bus})
@buses
@buses["#{trip['bus']['model']}"] = {"#{trip['bus']['number']}": bus}
@buses[0][1]
@buses
exit
@buses["#{trip['bus']['model']}"] && @buses["#{trip['bus']['model']}"]["#{trip['bus']['number']}"]
@buses["#{trip['bus']['model']}"]
continue
response.body
exit
buses.last.buses_services
buses.last.services
buses.last
Bus.last.services
Bus.last
exit
continue
services
exit
BusesService.count
exit
BusService.count
BusService.count\
exit
response.body
exit
response.body
response.parsed_body
response.methods
response.body
response.keys
response
@controller
response.body
exit
Bus.maximum(:id).next
Bus.maximum(:id)
last_bus_id
exit
trips.last
Trip.last
cities
exit
continue
bus = Bus.create(number: trip['bus']['number'], model: trip['bus']['model'],   services: services)
exit
trip
bus.errors
dus.errors
bus = Bus.create(number: trip['bus']['number'], services: services)
services
trip['bus']['number']
exit
City.last
City.last\
from = City.create(name: trip['from']) && cities << from
trip['from']
from
