exit
Dir[File.join('.', 'app', '*', '*.rb')].each { |file| require file }
City.last
ReloadJson.new.call('fixtures/medium.json')
Rake.application.run
require 'rake'
ReloadJson.new.call('fixtures/medium.json')
require_relative 'config/boot'
require_relative '../config/boot'
q
ReloadJson.new.call('fixtures/medium.json')
require_relative 'config/application'
Dir[File.join('.', 'app', '*', '*.rb')].each { |file| require file }
q
ReloadJson.new.call('fixtures/medium.json')
RubyProf.measure_mode = RubyProf::WALL_TIME
q
ReloadJson.new.call('fixtures/medium.json')
RubyProf.measure_mode = RubyProf::WALL_TIME
q
Service.import(@services, validate: true)
City.import(@cities, validate: true, on_duplicate_key_ignore:  true, recursive: true)
City.import(@cities, validate: true, recursive: true)
bus.trips
Bus.import(@buses, validate: true, recursive: true)
bus.trips
bus = @buses.first
bus = @buses.trips
city.from_trips
city.to_trips
city.trips_to
city = City.last
city = Coty.last
Trip.all
service.buses
service.bus
service = @services.last
1+1
@buses
@cities
city = @cities.first
@cities.reload
City.import(@cities, validate: true, on_duplicate_key_update:  {conflict_target: [:name], columns: [:name]}, recursive: true)
c
Trip.last
Service.import(@services, validate: true, on_duplicate_key_update:  {conflict_target: [:name], columns: [:name]})
Bus.import(@buses, validate: true, on_duplicate_key_update: {conflict_target: [:number], columns: [:model]}, recursive: true)
City.import(@cities, validate: true, on_duplicate_key_update:  {conflict_target: [:name], columns: [:name]}, recursive: true)
n
json = JSON.parse(File.read(file_name))
file_name = 'fixtures/medium.json'
file_name
json
